name: Shared Terraform Variables

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, staging, prod)'
        required: true
        type: string
    outputs:
      terraform_vars_set:
        description: 'Whether terraform variables were successfully set'
        value: ${{ jobs.terraform-vars.outputs.success }}

env:
  AWS_REGION: us-west-2
  TF_VERSION: 1.5.0

jobs:
  terraform-vars:
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.generate-vars.outputs.success }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate terraform.tfvars from GitHub Secrets
        id: generate-vars
        run: |
          # Make sure the environment directory exists
          mkdir -p terraform/environments/${{ inputs.environment }}

          # Set frontend domain name based on environment
          if [ "${{ inputs.environment }}" == "prod" ]; then
            FRONTEND_DOMAIN="swashflag.com"
          else
            FRONTEND_DOMAIN="${{ inputs.environment }}.swashflag.com"
          fi

          # Set other environment-specific variables
          if [ "${{ inputs.environment }}" == "prod" ]; then
            HOSTING_TYPE="cloudfront"
            MULTI_AZ="true"
            BACKUP_RETENTION="30"
            SKIP_FINAL_SNAPSHOT="false"
            MONITORING_INTERVAL="60"
            ENABLE_WAF="true"
          else
            HOSTING_TYPE="s3_only"
            MULTI_AZ="false"
            BACKUP_RETENTION="7"
            SKIP_FINAL_SNAPSHOT="true"
            MONITORING_INTERVAL="0"
            ENABLE_WAF="false"
          fi

          # Create the tfvars file using GitHub Secrets
          cat > terraform/environments/${{ inputs.environment }}/terraform.tfvars << EOF
          # Generated from GitHub Secrets and Environment Variables
          project_name = "swashflag-${{ inputs.environment }}"
          aws_region = "${{ env.AWS_REGION }}"

          # Networking
          vpc_cidr = "${{ secrets.TF_VAR_VPC_CIDR }}"
          public_subnets = ${{ secrets.TF_VAR_PUBLIC_SUBNETS }}
          private_subnets = ${{ secrets.TF_VAR_PRIVATE_SUBNETS }}
          azs = ["${{ env.AWS_REGION }}a", "${{ env.AWS_REGION }}b"]

          # Backend
          backend_cpu = ${{ secrets.TF_VAR_BACKEND_CPU }}
          backend_memory = ${{ secrets.TF_VAR_BACKEND_MEMORY }}
          # backend_image is set separately in the specific workflows
          
          # Database
          db_allocated_storage = "${{ secrets.DB_ALLOCATED_STORAGE }}"
          db_username = "${{ secrets.TF_VAR_DB_USERNAME }}"
          db_password = "${{ secrets.TF_VAR_DB_PASSWORD }}"
          db_backup_retention_period = "${{ secrets.TF_VAR_BACKUP_RETENTION }}"
          db_engine_version = "14.7"
          db_instance_class = "${{ secrets.TF_VAR_DB_INSTANCE_CLASS }}"
          db_maintenance_window = "Sun:02:00-Sun:03:00"
          # Frontend
          frontend_domain_name = "${FRONTEND_DOMAIN}"
          frontend_hosting_type = "${HOSTING_TYPE}"
          frontend_cloudfront_price_class = "PriceClass_100"
          frontend_enable_waf = ${ENABLE_WAF}
          db_multi_az = false

          # Tags
          tags = {
            Environment = "${{ inputs.environment }}"
            Project = "swashflag"
            Terraform = "true"
            ManagedBy = "github-actions"
          }
          EOF

          echo "Generated terraform.tfvars for ${{ inputs.environment }} environment"

          # Verify the file was created
          if [ -f terraform/environments/${{ inputs.environment }}/terraform.tfvars ]; then
            echo "Variables file created successfully"
            cat terraform/environments/${{ inputs.environment }}/terraform.tfvars
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "Failed to create variables file"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Upload terraform.tfvars as artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-vars-${{ inputs.environment }}
          path: terraform/environments/${{ inputs.environment }}/terraform.tfvars
          retention-days: 1