name: Shared Terraform Variables

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, staging, prod)'
        required: true
        type: string
    outputs:
      terraform_vars_set:
        description: 'Whether terraform variables were successfully set'
        value: ${{ jobs.terraform-vars.outputs.success }}

env:
  AWS_REGION: us-west-2
  TF_VERSION: 1.5.0

jobs:
  terraform-vars:
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.generate-vars.outputs.success }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate terraform.tfvars from GitHub Secrets
        id: generate-vars
        run: |
          # Make sure the environment directory exists
          mkdir -p terraform/environments/${{ inputs.environment }}
          
          # Create the tfvars file using GitHub Secrets
          cat > terraform/environments/${{ inputs.environment }}/terraform.tfvars << EOF
          # Generated from GitHub Secrets and Environment Variables
          project_name = "swashflag-${{ inputs.environment }}"
          aws_region = "${{ env.AWS_REGION }}"
          
          # Networking
          vpc_cidr = "${{ secrets.TF_VAR_VPC_CIDR }}"
          public_subnets = ${{ secrets.TF_VAR_PUBLIC_SUBNETS }}
          private_subnets = ${{ secrets.TF_VAR_PRIVATE_SUBNETS }}
          azs = ["${{ env.AWS_REGION }}a", "${{ env.AWS_REGION }}b"]
          
          # Backend
          backend_cpu = ${{ secrets.TF_VAR_BACKEND_CPU }}
          backend_memory = ${{ secrets.TF_VAR_BACKEND_MEMORY }}
          # backend_image is set separately in the specific workflows
          
          # Frontend
          frontend_domain_name = "${{ inputs.environment == 'prod' && '' || inputs.environment + '.' }}swashflag.com"          frontend_hosting_type = "${{ inputs.environment == 'prod' && 'cloudfront' || 's3_only' }}"
          frontend_cloudfront_price_class = "PriceClass_100"
          frontend_enable_waf = ${{ inputs.environment == 'prod' && 'true' || 'false' }}
          
          # Tags
          tags = {
            Environment = "${{ inputs.environment }}"
            Project = "swashflag"
            Terraform = "true"
            ManagedBy = "github-actions"
          }
          EOF
          
          echo "Generated terraform.tfvars for ${{ inputs.environment }} environment"
          
          # Verify the file was created
          if [ -f terraform/environments/${{ inputs.environment }}/terraform.tfvars ]; then
            echo "Variables file created successfully"
            cat terraform/environments/${{ inputs.environment }}/terraform.tfvars
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "Failed to create variables file"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Upload terraform.tfvars as artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-vars-${{ inputs.environment }}
          path: terraform/environments/${{ inputs.environment }}/terraform.tfvars
          retention-days: 1